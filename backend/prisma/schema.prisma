// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Store authors
model Author {
    id           String    @id @default(cuid())
    displayName  String
    github       String?
    profileImage String?
    Post         Post[]    
    Comment      Comment[]
    Likes        Likes[]
}

// Store posts. Each post has a primary key, and references a foreign key author id
model Post {
    id          String    @id @default(cuid())
    author      Author    @relation(fields: [authorId], references: [id])
    authorId    String
    title       String
    source      String
    origin      String
    description String
    contentType String // [text/plain, text/markdown, application/base64, image/png;base64, image/jpeg;base64]
    content     String?
    categories  String[]
    count       Int
    published   DateTime
    visibility  String // [public, friends]
    unlisted    Boolean
    likeCount   Int       @default(0)
    Comment     Comment[]
    Likes       Likes[]
}

// Store comments. Each comment has a primary key, and references a foreign keys author id and post id
model Comment {
    id          String   @id @default(cuid())
    author      Author   @relation(fields: [authorId], references: [id])
    authorId    String
    post        Post     @relation(fields: [postId], references: [id])
    postId      String
    contentType String // [text/plain, text/markdown, application/base64, image/png;base64, image/jpeg;base64]
    comment     String
    published   DateTime
}

// Store likes. Primary key is a combined author id and post id foreign key
model Likes {
    postId   String
    authorId String
    post     Post   @relation(fields: [postId], references: [id])
    author   Author @relation(fields: [authorId], references: [id])

    @@id([postId, authorId])
}
